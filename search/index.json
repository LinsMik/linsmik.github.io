[{"content":"Commit规范\n用空行将正文与主体分开 基本上就是总分的意思，有很多内容要提交的时候先主要的说一下这是在干嘛，然后空一行下面解释为什么要改动和改动的地方\n限制到50个字符以内 并不是强制要求，主要还是督促上传者精炼语句，提取关键信息，不过最多72个字符，因为在这之上commit会开始加\u0026hellip;省略后面的内容\n每句话首字母大写 好看\n不要用句号给句子收尾 commit作为一个空间很紧张的地方不要用这种方式浪费\n使用强硬句式 Git中的反馈信息都是使用这种命令句式的，比起普通的叙述句式更让人能一看看出修改的内容。用Refactor subsystem X for readability取代Fixed bug with Y，更不要在commit里面写意义不明的More fixes for broken stuff，这种跟没写是一样的，根本起不到参考作用。 如果不习惯的话就想想加上If applied,this commit will do sth.后面的部分就是你应该写的commit。\n主体部分使用少于72字符 主要是会超出右边界\n用主体部分来解释什么和为什么，而不解释怎么样 解释怎么样就太长太长了，这个应该是你写到技术博客里的东西，在commit里可读性太差了。一般来说代码自身的改变就解释了怎么变化的，如果特别复杂那也是应该在源码注释里面说明\n命令行的Git比IDE里的Git更强大，多用命令行。\nPro Git电子书笔记 只挑干的记\n初始化仓库 git init\n克隆仓库 git clone \u0026lt;url\u0026gt; (option file name)\n检查文件状态 git status 加-s可以获得short版本的输出，??表示新文件，A代表暂存区文件，M代表修改过的文件，如果是MM是暂存后又修改了\n跟踪文件 git add \u0026lt;files\u0026gt; 这里需要注意每做一次更改都需要add一次，不然commit上去的就是你最后一次add的，而不是你的最新文件\n忽略文件 .gitignore 不需要更新的文件，比方说日志和编译文件\n所有空行或者以 # 开头的行都会被 Git 忽略。\n可以使用标准的 glob 模式匹配，它会递归地应用在整个工作区中。\n匹配模式可以以（/）开头防止递归。\n匹配模式可以以（/）结尾指定目录。\n要忽略指定模式以外的文件或目录，可以在模式前加上叹号（!）取反。 glob模式是一种简化的正则表达式 所谓的 glob 模式是指 shell 所使用的简化了的正则表达式。 星号（*）匹配零个或多个任意字符；[abc] 匹配任何一个列在方括号中的字符 （这个例子要么匹配一个 a，要么匹配一个 b，要么匹配一个 c）； 问号（?）只匹配一个任意字符；如果在方括号中使用短划线分隔两个字符， 表示所有在这两个字符范围内的都可以匹配（比如 [0-9] 表示匹配所有 0 到 9 的数字）。 使用两个星号（**）表示匹配任意中间目录，比如 a/**/z 可以匹配 a/z 、 a/b/z 或 a/b/c/z 等\n查看已暂存和未暂存的修改 git diff 和status差不多，但是这个能看到文件内部的更改。git diff --staged可以查看已暂存文件和最后一次提交文件的差异。其本身只显示尚未add的改动\n提交更新git commit 使用-m后缀增加注释内容，跳过暂存可以使用-a后缀，可以直接提交所有跟踪的文件\n移除文件 git rm 从暂存区移除某个文件，移除后就不会再跟踪这个文件了，需要注意如果之前已经修改该或暂存过需要使用-f后缀强制删除。如果只想不跟踪而不在工作文件夹中删除这个文件使用--cached，或者去.gitignore文件里面忽略。rm命令也可以使用glob模式，例如git rm log/\\*.log就是删除log文件夹下所有.log文件\n移动文件git mv file_from file_to 实际上是执行了复制，删除源文件，add新文件三条命令。不过git明白这相当于是一次重命名\n查看提交历史 git log 使用-p后缀可以看到每次提交的差异，也可以输入类似-2的后缀来限制输出最新的两次提交。\u0026ndash;stat显示统计信息。\u0026ndash;pretty==oneline 会显示把提交放在一行展示，另有short，full和fuller选项和format选项。\u0026ndash;graph会给你的命令行带一点符号来展示图形，稍微形象一些。也可以用\u0026ndash;since和\u0026ndash;until来限制时间，比方说git log --since=2.weeks 或者使用\u0026ndash;author和\u0026ndash;grep这样来精细检索。还有一种过滤器-S，可以筛选出添加或删除了某个字符串的提交。e.g.git log -S function_name\n撤销操作 git commit --amend 可以补上忘记添加的文件，如果没有，那也可以改提交信息，历史中也只会保存后来修改的提交\n取消暂存的文件 git reset \u0026lt;filename\u0026gt; 让某个文件离开暂存区，这是个危险的命令，尤其是在加上\u0026ndash;hard之后 当然了也可以用git checkout -- \u0026lt;file\u0026gt; ，Git会用最近提交的版本覆盖这个文件。需要注意的是在Git中可以被恢复的数据都是已提交的\n查看远程仓库git remote 会列出远程服务器的简写，origin会是默认名字\n添加远程仓库git remote add \u0026lt;shortname\u0026gt; \u0026lt;url\u0026gt;这样可以指定一个名字，这样以后可以用这个名字来代替链接\n从远程仓库中抓取与拉取git fetch \u0026lt;remote\u0026gt;这个命令只会下载数据，不会合并代码，而git pull可以自动抓取后合并\n推送到远程仓库git push \u0026lt;remote\u0026gt; \u0026lt;branch\u0026gt; 这个命令必须在之前没有人推送时才能起作用，也就是说更改过的版本你必须先fetch才能再push\n查看某个远程仓库git remote show \u0026lt;remote\u0026gt;\n远程仓库的重命名与移除git remote rename 和git remote remove\n列出标签git tag 可以显示出版本号\n创建标签\n附注标签 git tag -a 如果后面不加-m的话Git会要求你写入指定信息 轻量标签 git tag \u0026lt;version\u0026gt; 后面不加别的，只有版本信息 后期打标签 在末尾指定提交的校验和\n共享标签git push origin \u0026lt;tagname\u0026gt; push并不会默认上传标签，需要显式推送\n删除标签 git tag -d \u0026lt;tagname\u0026gt; 如果要删除远程标签的话git push origin --delete \u0026lt;tagname\u0026gt;\n检出标签 git checkout 这个还挺麻烦的，如果需要做更改的话需要创建新分支\nGit别名，在config文件里面设置自动推断比方说git config --global alias.ci commmit 可以用git ci替代git commit 常用的有git config --global alias.unstage 'reset HEAD --' git config --global alias.last 'log -l HEAD' 该命令可以看最后一次提交 如果要写外部命令只要在命令前加！就可以替换了\n分支创建git branch \u0026lt;name\u0026gt; 这里需要注意一点，Git的分支都是以指针移动到对应快照上，并非创建新的副本\n分支切换git checkout \u0026lt;branch\u0026gt;\n删除分支git branch -d \u0026lt;name\u0026gt;\n冲突处理，在针对同一处位置的多个修改时不会触发fast-forwarding，也就是说Git不会帮你自动合并，需要你自己处理。在\u0026lt;\u0026lt;\u0026lt;\u0026lt;和===== 之间的是上半部分，和\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;之间的是下半部分，这两部分是发生冲突的地方，需要进行处理，最后别忘了把这些符号也都删掉。解决完成后再add和commit就可以了\n分支管理git branch 会列出所有分支，*代表目前所在分支。后缀加-v可以看到各个分支最后一次提交，\u0026ndash;merged可以看到已合并到当前分支的分支，\u0026ndash;no-merged则是未合并的，对于没星号已合并的分支可以直接删除，未合并的会报错，要删的话用-D\npull和fetch的区别，pull会自动merge，而fetch不会，它只是单纯的下载本地没有的数据\n删除远程分支git push origin --delete \u0026lt;branch\u0026gt; 会删除远程服务器上的这个分支指针，通常来说已删除的分支还会在服务器上保留一段时间，便于恢复\n变基rebase 将提交某一分支的所有更改移至另一分支 这样做的好处比起merge来说看起来更简洁（只有一条线，而不是变成树型，虽然某种意义上这个还是树型\u0026hellip;） 反正就\u0026hellip;看图吧，实在不会用乖乖merge无非难看点 需要注意\n如果提交存在于你的仓库之外，而别人可能基于这些提交进行开发，那么不要执行变基。 如果你遵循这条金科玉律，就不会出差错。 否则，人民群众会仇恨你，你的朋友和家人也会嘲笑你，唾弃你。\n想象一下就知道如果在多人开发中使用这种技巧很有可能导致别人开发的东西在一个已经被删除的分支上，而你们两个怎么也碰不到一起，因为你总要rebase。或者对方会在你的操作之间commit，天啊想想就是一场灾难\n当然也有补救措施，但是考虑到这会给团队中的每个人带来大量的学习成本，而且我暂时也用不到，作为merge派我还是以后需要了再学吧\nGit的四种协议，本地协议，HTTP协议，SSH协议，Git协议\n本地协议 最常用的，如果文件前指定file://会使用网络传输的进程，会降低效率 优点是简单，如果设置过共享文件夹的话由于其分布式的特性会很方便。缺点是这个不一定快，比起那些有大量CDN服务器的网站来说。而且NFS访问一般也比SSH慢，而且每个成员都有完整的shell权限，如果被恶意破坏没有办法阻止\nHTTP协议 有智能HTTP和哑HTTP之分，不关注了。好处是用着简单，高效且快，如果HTTPS的话还安全。缺点是服务器上架设麻烦。\nSSH协议 这玩意不用介绍了吧。优点是简单、安全、高效。缺点是不支持匿名\nGit协议 有点像是可以匿名的SSH，不过不需要限权完全没有安全措施。有点是这个是最快的。缺点是缺乏授权机制。常用的方法是开放Git协议但是只读，SSH或HTTPS协议用来给开发者写入权限。而且这个架设难度很高，需要开放9418端口，企业一般不会允许开放非标准端口\n生成SSH公钥。公钥一般存在于~/.ssh下，以id_dsa和id_rsa命名，带有.pub后缀的是公钥，另一个是私钥。如果没有就运行ssh-keygen命令生成。\n后面是将怎么手动搭建自己的Git服务器的，我用不到，而且现在一般都用成熟的套件（GitLab）一步一步配置下来吧，有前端可以看。或者直接使用专业的托管网站比方说Github\n","date":"2023-01-01T15:14:07+08:00","permalink":"https://kitasuna.ml/post/%E4%BD%A0%E5%BA%94%E8%AF%A5%E5%AD%A6%E4%BC%9A%E4%B8%96%E7%95%8C%E4%B8%8A%E6%9C%80%E5%A5%BD%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E5%B7%A5%E5%85%B7git/","title":"你应该学会——世界上最好的分布式版本控制工具Git"},{"content":" 首先，在百度上找一段文字 致 200 米运动员：\n200 百米跑道虽不长，运动健儿志高扬。摸拳擦掌跃欲试，分秒必争斗志扬今天的你们英姿飒爽，今天的你们朝气蓬勃，今天的你们一马当先。相信自己，你是最棒的！不要放弃，不要气馁。\n成功永远属于你们。运动员！加油！\n激动的血液因今天而沸腾，平静的情绪因今天而激动。在明媚的蓝天下，在宽广的赛场上，一颗颗炽热的心为你们而跳动，一双双期待的眼神因你们而牵动。努力吧！运动健儿们，相信自己，胜利的光环将永远环绕你们！\n生命的意义在于奋斗，青春的意义在于拼搏，我们的激情在燃烧，我们的活力在四射，在今天这激动人心的日子里，运动健儿们，请尽情发挥你们的风采本色吧。\n2. 在文字前加个抬头，假装是大学信纸写的 蹲大下面的横线如图设置\n3. 寻找合适的字体 这里我分别用的 汉仪尚巍手书 W 和 【嵐】芊柔体\n稍微调整一下格式，如下图所示\n感觉已经差不多了，但灵魂问题就是，这样太整齐了，我们得想办法让文字乱一些\n4. 宏命令 文件 - 选项 - 信任中心 - 信任中心设置 - 启用所有宏\n视图 - 宏 - 创建一个宏\n进去把代码 copy 上\n代码参考 如何让打印出来的字体看起来像手写的？\nSub 字体修改() \u0026#39; \u0026#39; 字体修改 宏 \u0026#39; \u0026#39; Dim R_Character As Range Dim FontSize(5) \u0026#39;指定五种字号 FontSize(1) = \u0026#34;16\u0026#34; FontSize(2) = \u0026#34;16.2\u0026#34; FontSize(3) = \u0026#34;16.5\u0026#34; FontSize(4) = \u0026#34;17\u0026#34; FontSize(5) = \u0026#34;17.2\u0026#34; Dim ParagraphSpace(5) \u0026#39;指定五种行间距 ParagraphSpace(1) = \u0026#34;12\u0026#34; ParagraphSpace(2) = \u0026#34;13\u0026#34; ParagraphSpace(3) = \u0026#34;17\u0026#34; ParagraphSpace(4) = \u0026#34;9\u0026#34; ParagraphSpace(5) = \u0026#34;12\u0026#34; For Each R_Character In ActiveDocument.Characters VBA.Randomize \u0026#39;字号在5种指定大小中随机选取 R_Character.Font.Size = FontSize(Int(VBA.Rnd * 5) + 1) \u0026#39;位置在1—3之间随机选取 R_Character.Font.Position = Int(VBA.Rnd * 3) + 1 R_Character.Font.Spacing = 0 Next Application.ScreenUpdating = True For Each Cur_Paragraph In ActiveDocument.Paragraphs \u0026#39;行间距在5个指定值中随机选取 Cur_Paragraph.LineSpacing = ParagraphSpace(Int(VBA.Rnd * 5) + 1) Next Application.ScreenUpdating = True End Sub 保存 - 运行\n回来看原文件，已经 “良莠不齐” 了\n5. 调整 如果对结果不满意，可以多运行几次宏，找到合适的一版，再微调一下\n下划线格式在下拉菜单能找到详细设置，用空格延长下划线\nword 默认段首空格是缩进\n解决办法是在上一行倒数几个空格的地方回车，下面一段接上就可以了\n(经评论提醒，可以设置取消首行缩进)\n6. 保存 另存为 pdf，免得打印的时候乱了格式\n最终效果（横线粗细不一是显示的原因，放大后自动消失）\n当然，这种奇技淫巧可能在写反思的时候更有用吧（逃）\n","date":"2022-12-29T11:23:52+08:00","permalink":"https://kitasuna.ml/post/%E5%9C%A8word%E4%B8%AD%E8%B0%83%E5%87%BA%E6%89%8B%E5%86%99%E6%95%88%E6%9E%9C/","title":"在Word中调出手写效果"},{"content":"LOG作为一种对比RAW格式的妥协，在保证了文件大小不至于过大的同时，保证了一定程度的宽容度。但是佳能不这么想，对比起隔壁Sony全系S-LOG，佳能后知后觉的只在较新的顶配机型上加了自己的C-LOG功能。\n为了尽可能达到这个效果，我们可以用相机里的自定义预设来模拟。相当于用调色来模仿C-LOG。实际上并没有提升。算是一个聊胜于无的功能吧。\n总之只需要用EOS Utility连接相机。\n在预设风格里面加载pf2或者是pf3文件就可以了，如果之前有过加预设滤镜那应该对这个步骤很熟。\nCinestyle Download | Technicolor\n这里提供免费的C-LOG文件，网站里也有安装教程就不细说了（其实也说完了）。\n体验上的话确实有点像正经用LOG那种灰蒙蒙的感觉，由于目前我也不拍视频，所以就不上对比了。说到底还是骗骗自己，获得一个白嫖的很少的提升。\nHave fun.\n","date":"2022-12-29T10:51:49+08:00","permalink":"https://kitasuna.ml/post/%E4%BD%B3%E8%83%BDm50%E6%80%8E%E4%B9%88%E4%B8%8Ac-log/","title":"佳能M50怎么上C-LOG"},{"content":"简单来说一句话，看看自己有没有配置config.toml里的baseUrl。如果没有的话自己每次引用的图片都是自己的域名/引用的域名，这样能找的到图片就有鬼了，肯定每次都报错404。\n我还因为这个问题头疼了两天，主要是搜也搜不到，估计是很蠢的问题，也没好意思提Issue去问。\n现在发现根源之后果然很蠢。主要是浏览器报错的error竟然是黄色的，在我的刻板印象里黄色的都是warning不用管的。\n后来想了想本地部署的可以显示，但是远程的不行，那我看看这个报的错有什么区别呗。一对比才找到问题。\n于是搜了下上面的Error with Permissions-Policy header: Origin trial controlled feature not enabled: 'interest-cohort'.\n找到了这个博客就想起来前几天配置的时候为了方便不用老改CNAME，把Url删除空了，这样确实主页什么的改或者不改域名都能进了，但是图片引用上就寄了。真是服了。\n不过就算配置了baseUrl这个报错也不会消失，不过能用就行了我也不想管了。\nStackOverflow上面有说是router配置问题的，反正大概就还是哪个地方没写明白地址的事吧。\n","date":"2022-12-22T19:18:26+08:00","permalink":"https://kitasuna.ml/post/%E8%A7%A3%E5%86%B3%E9%83%A8%E7%BD%B2%E5%9C%A8github-pages%E4%B8%8A%E5%9B%BE%E7%89%87%E4%B8%8D%E6%98%BE%E7%A4%BA%E7%9A%84%E9%97%AE%E9%A2%98/","title":"解决部署在Github Pages上图片不显示的问题"},{"content":"22年末了，最近发生了几件小事。\n一是前几天斯坦索姆完全放开，几年间洛丹伦王国引以为傲的严格管控变为了泡影。联盟高层官员掉转船头的速度让我等小民目瞪口呆。\n理所当然的天灾军团迅速入侵，大量的平民感染了瘟疫，进而被同化。一眨眼之间你所身处的世界好像变成了《死亡搁浅》，人人自危不敢出门，怕遇上看不见的威胁——BT。\n但是不要紧的，洛丹伦的圣光会照耀全域。乌瑟尔这样说道。虽然乌瑟尔之前明明说过天灾必须被消除。虽然平民很多天天“感恩”、“反思”，谢谢洛丹伦，洛丹伦万岁！\n二是这两天在折腾图床的事情\n原本的SM.MS在Github Pages上不知道怎么404了，之前几天的时候还没问题，查询相关资料的时候大概是图床站的网络访问一直是个问题。用不了就换呗，尝试了七牛云、又拍云和腾讯云COS，发现国内的图床都要求一个域名备案。我倒是不了解了，你个图床有什么好备案的。备案就需要固定IP，那固定IP你总得有个云服务器吧，除非真的有钱到开通固定IP。这一条产业链下来，想在国内有稳定访问，不可避免地要被腾讯或者阿里来一刀。这两家的优惠确实挺大，但也只针对第一年和学生，后面你迁移成本大了那就由不得你了。必须被狠狠的割韭菜。实际上这一套打法也正是互联网公司这些年来的经典操作。\n国内的政策问题导致只要使用国内服务就得备案，身份证验证、人脸识别、绑定手机号。好像只要不实名了GW就会出现戒断症状，拜托，国内的摄像头数量和密度已经是世界上数一数二的了。我们真的有必要什么都被看管着吗？\n不利于GW的事不要做，不利于GW的话不要说\n本来一句调侃越来越变成了party的行动标准。自某有远大抱负的master更改祖宗之法后，大力推动舆论战，加强监管力度。COVID-19真正让世人看到了有能力搞棱镜门的远不止灯塔国一个，如果我们想，我们也能做到。要我说这次的力度还是轻了一些。全国上下一套系统，你名下手机号在哪里的基站注册了就给你算上经过，直接连通到基层，实时负责处理。直接变换成1984。当然了我这说的也是气话，真这么做了一方面基层执行上肯定有问题，毕竟养了那么一群酒囊饭袋。另一方面国际舆论上也过不去，这不侵犯人权吗。虽然就互联网公司泄露用户信息这事已经相当侵犯人权了。谁还不被打骚扰电话，不被发骚扰短信了呢。\n为什么我说GW里面有一群废物呢。第一、层层加码。这事其实没什么好说的，我party我army历来推崇没有条件就创造条件。这种精神在某些需要攻坚克难的场合下确实发挥了作用（当然，是用人命和个人的各方面牺牲填上的）。但也变成了一种潮流，就是全party上下总是要学习、推崇这种精神。如果说在企业里面你的老板总给你画大饼，布置一些难以完成的任务，那你清楚这叫职场PUA。那怎么到部署政治任务的时候就分不清楚了呢。我们一般来说不会命令一个人考上清华，因为这不叫命令，这只会出现在SM段子里面。一个人的能力是有极限的，而且这个能力很多时候不以意志为转移。你就比方说我，很难吃胖，如果你要求我三个月内长到两百斤，那你就是在要求我去死。因为我一定会在实现这个目标的过程中出现健康问题。但是某些肉食者不这么想。\nUPPER HEADS下了命令，他们为了自己的KPI和仕途或者单纯为了甩锅，一定会把这个压力给到下层，甚至因为他们已经获得了不少成果，更是难以接受自己因为某项工作的失败只能停止在这个层次，所以一定会加压。层层转下来政策不变了味才怪。那你说能怪1号吗？那肯定不能全怪，一个人的精力是有限的，他只能当船长，不能每个岗位都干。他受到的信息是大副、领航员等等一系列人传达上来的。这就涉及到通信中一个很常见的性能指标，误码率。如果一条信息被层层传递，中间夹杂很多噪音，还没有纠错机制，那最后收到的信号多半是不可用的。那你说1号一点没错那肯定也不对。毕竟1号是指望干大事的。把自己改成了真正的+1s还不去变革臃肿的系统，不去清创去脓，那做的这个变更到底是为了什么。总不能白担一个西方媒体大独裁者的骂名吧。\n治大国如烹小鲜 ——《道德经》\n其实我们也常常会比较，比方说新加坡，比方说马来西亚。他们的最大优势就是有了政治强人，一举推翻了过去的萎靡风气。我们有吗，理论上来说是有的。毕竟做了前无古人之大动作嘛。那成效呢？我看到的是针对灯塔的强硬态度，这有问题吗，当然没有。对外确实卓有成效，那对内呢？僵化的体制毫无进展。所谓的脱贫攻坚不过是强行脱贫，做出来的成效是让一些混吃等死的村名猛薅政府和扶贫官员的羊毛，完成了全面小康的目标。你看这个操作像不像玩网游的时候为了一个称号狠命去刷一些无聊又很粪的副本。没办法，谁让我们是socialism嘛，总需要一点名头让我们跟其他capitalism不一样。同时表示一下我们当年，先富带后富的policy完全没有问题，你看，你们富了吧。但是在我看来这完全就是吃了人口红利，加上同行不争气。灯塔国猛搞产业转移，把工业全秃噜出来了我们才有机会弯道超车，说到底还是顺风局。前几年猛舔鹰屁股把鹰舔的挺高兴，加上那会鹰正忙着跟熊斗呢，才有这样的局势给你利用。现在灯塔上灯是不太亮了，还老往这边照。不可避免的升级成了正儿八经拼治理能力和决策能力的正面对决。也就好在这几年灯塔1号不是疯子就是快入土的老头。但凡能出一个强人都不可能跟现在一样搞个均势甚至略优。\n在我看来Institution不应该搞什么终身雇佣制，你有些人吃空饷、尸位素餐搞得整个系统运转效率极低。进入其中的大多都不是为了给人民做事，全是图着一个稳定能摸鱼，全是这种人你说这还能有好吗？就算其中有一些人想上升，那也是图着有更多的利益，很少说我是为了让这个世界能因为我的存在有些不同。\n现在可好了真是内忧外患，瘟疫导致低生产力，放开导致降低预期寿命，弱化版的瘟疫它也是瘟疫。就像是再丐的3090也比旗舰3080ti强，还强不少。你指望一个1传22的东西不降低生产力是不可能的，之前是有问题的地区不能开工，现在变成不是重症的都上工。就这个瘟疫导致的全身疼痛和发热来说，不出安全事故才怪了。更何况现在也是一批人倒了让另一批不太严重的顶着。就这样下去那是真正的共存了，等到什么时候瘟疫变异到能把我们都杀死了或者这代人因为连续不断的感染预期寿命大大下降，人口急剧减少之后，进化出了新的抗瘟疫的人类，这场闹剧才能算是停止。说到底我认为之前的全面抵抗天灾军团策略是完全没有问题的，唯一出现的问题就是在于我们的机器不是一个足够精密周到的机器，导致总会有瘟疫趁虚而入。几年的消耗下来让我们不得不更改之前的策略，转而使用人命来填因为设计问题导致的坑。这也就是让我非常非常不爽的一点。你变更了基本的东西，你想要做出大事，那你最好做到了。现在就是每年大批量的受过高等教育的人不得已去卷一些毫无意义的东西，他们拼命学习不是为了获得更多的知识，只是为了获得一个更好的文凭以便在未来的分蛋糕环节能分到本来应该有的部分。导致变难的问题仅仅是他们晚出生了几年而他们所在的世界没有发生什么变化。 这毫无疑问的是一种资源的极大浪费。\n实际上当我自己在游戏里尝试当一个市长或者统治者的时候，我也常常把我手下的人民当成一串数字一种资源。甚至于每当玩《十字军之王》时出现那种琐事让我点确认或者做选择时我总会想这点小事别来烦我，只有战争和大型建设能勾起我的兴趣。那我也不禁去想，我的一生在某些人的眼里是不是也只是一件微不足道的小事呢？虽说对于他们可能是如此，但对于我自己这是我唯一而且重要的一生。\n","date":"2022-12-22T14:13:01+08:00","permalink":"https://kitasuna.ml/post/%E5%8F%AA%E6%9C%89%E5%B0%81%E7%A6%81%E6%B2%A1%E6%9C%89%E8%87%AA%E7%94%B1%E7%9A%84%E7%8E%8B%E5%9B%BD%E6%B2%A1%E6%9C%89%E6%9C%AA%E6%9D%A5/","title":"只有封禁没有自由的王国没有未来"},{"content":"今天做蔬菜粥！\n不用多说还是熟悉的模糊菜谱，基本上就突出一个自己品。\n用料 大米 1 杯\n青菜 一小把\n猪肉 150 克\n羊肚菌 若干\n油 适量\n盐 适量\n蔬菜粥的做法 准备好的材料\n菜切碎\n最好用刀剁碎\n羊肚菌先下，再下一点薄油。\n菜和肉一起，煮开后一分钟下盐就可以了\n完成，适合孩子吃\n成品 大米一杯需要配到锅大概中上位置的水，因为米煮熟还是需要20-25分钟的，中间蒸发很多水，如果没掌握好量，后面加水就不要加太多了。肉丁和菜特别容易熟，按照他说的煮开了就能出锅是没问题的。盐的话3人份放1勺半正好，如果放多点味道当然好一些但是会纳摄入也会变多。油的话点了一点，大概10ml，说实话感觉不出油发挥的作用，反正加点意思意思就行了。\n想做粘稠一点，这次的水没把握好，下次做成了再评分吧\n下一步准备买量筒和电子秤。以后的菜谱笔记尽量详细。我觉得菜完全可以做标准化的。\n","date":"2022-12-20T21:56:43+08:00","permalink":"https://kitasuna.ml/post/%E5%8C%97%E5%B1%B1%E5%AE%B6%E7%9A%84%E9%A5%AD-%E5%85%B6%E5%9B%9B/","title":"北山家的饭 其四"},{"content":"Cuisine 4 干锅土豆片 用料 土豆 1 大个 青椒 2 个 五花肉片 适量 葱姜蒜 适量 豆瓣酱 1 小勺\n干锅土豆片的做法 土豆切片\n青椒切片\n葱姜蒜辣椒备用（胡萝卜是为了配色，可要可不要）\n1 勺生抽➕1 勺料酒➕半勺白糖➕1 勺豆瓣酱\n土豆片电饼铛煎一下，辣椒也煎一下，煎出虎皮\n少油放肉片，煎出猪油\n放葱姜蒜辣椒，把土豆和青椒放进去，把调料倒进去，收一下汁就行\n出锅\n上成品图 算是比较失败吧。本来以为家里有电饼铛，结果之前被扔掉了。不得已选择了干煸的方式对土豆片预处理，这就导致了一个问题，土豆边缘熟度比中间高，如果没有裹上蘸料分散热量就会导致边缘都要糊了里面还硬邦邦的。实在是没有办法才这么做的。\n另外买猪五花主要是为了熬猪油，普通的猪肉块因为含有瘦肉的部分较多，如果要熬油瘦肉很容易就老了。最后收汁的时间也没把握好，主要是因为前面肉已经有点糊的感觉了，不敢再加长时间了。\n总的来说把干锅土豆做成了普通的青椒炒肉片，由于没有成功所以暂不评分。\n","date":"2022-12-19T20:41:25+08:00","permalink":"https://kitasuna.ml/post/%E5%8C%97%E5%B1%B1%E5%AE%B6%E7%9A%84%E9%A5%AD-%E5%85%B6%E4%B8%89/","title":"北山家的饭 其三"},{"content":"Cuisine 3 鸡翅根炖土豆 用料 鸡翅根 8个\n土豆 2个\n葱 半根\n粉条 1把\n料酒 1勺\n盐 5克\n姜 5片\n生抽 1勺半\n老抽 半勺\n干辣椒 3个\n冰糖 6块\n蚝油 半勺\n花生油 10克\n啤酒 半瓶\n用料 鸡翅根炖土豆的做法 把准备好的鸡翅根每个正反面各片两刀，为了后期入味儿，热水焯出血沫，再用冷水清洗干净。\n按照上面说明中的生抽、老抽、耗油、冰糖配好调料，准备干辣椒和切好的葱姜\n锅中放油，稍稍热点了放进调料炒糖色\n然后放入鸡翅根上色，放入葱姜辣椒调味儿\n放入半瓶啤酒，略加一点水，大火炖开转入小火炖 20 分钟\n土豆切块，事先泡好粉条，放入锅中再小火炖十分钟\n等到土豆炖烂就可出锅\n操作简单，非常下饭！\n这次大失败所以不放图了，总结一下比较重要的地方。\n第一个是炒糖色，这个很麻烦而且很重要，但是这个B教程没说，我的做法是小火，酱料下过之后必须立即翻炒防止粘锅，等到开始冒泡立即放入翅根，翻炒上色，这个过程要稍微长一点，就是你明显可以看到有颜色的时候还需要再炒，因为这个颜色会在后面的过程中被洗掉一部分，非常离谱。当然了，过长时间也会导致变糊，比单纯的炒冰糖和酱料会慢一些。\n第二个，焯血沫，很他妈离谱。完全没图和解释。具体就是开水煮翅根会冒出来火锅里面类似的沫子，那个就是了，不是红色的，我觉得就是油沫。\n第三个，这个逼教程最重要但是也被这个逼人省略了的，放啤酒之后加一点水。我的建议是不加也行。顺便这个教程啤酒大小也没有，我只能说我400ml的啤酒加半碗水是完全完全的overkill了。后面小火煮三十分钟根本不能收汁。但是这道菜的步骤完全没有加盐和味精的地方，所以意思就是你刚开始放的料除以你食物的多少，就是你得到的咸度。这个土豆真的，有大土豆和小土豆，但是没说！如果你运气不好跟这个sb教程的土豆不一样大，那你肯定会出岔子的。土豆炖烂的话我这里10分钟是不够的，我只能说10分钟中火小火混合勉强烂了一点，如果要那种软软的建议中火10分钟，顺便我切的块比图中给的要小一半。\n这次菜失败的原因就是这个菜谱里面未知因素太多了，根本没法一下子掌控，如果不想花两个小时吃自己做出来的寡淡无味的东西，一定要去找足够详细的教程，最好是每个步骤都有确定用量的。\n我最讨厌说每个人有每个人口味所以写适量的，对于小白来说你需要给他一个确定的能吃的味道，他再根据自己的口味去调整调料的用量。要不你就写出参考用量，然后写明白这里可以调整正负多少多少。你妈个逼的不写明白的有一个算一个全他妈脑瘫。\n","date":"2022-12-18T20:17:23+08:00","permalink":"https://kitasuna.ml/post/%E5%8C%97%E5%B1%B1%E5%AE%B6%E7%9A%84%E9%A5%AD-%E5%85%B6%E4%BA%8C/","title":"北山家的饭 其二"},{"content":"作为一个极其怕麻烦的人本来我是根本不想拥有做饭这个技能的，但是爸爸做饭越来越敷衍，总拿外面卖的主食当一顿饭。（小笼包、肉夹馍等等）虽然偶尔吃吃还可以，但是家父只要发现你能吃进去这个那么你这段时间一定会隔三岔五的吃到这个东西，尤其是可以外面买到或者只需要简单加工的。这也就导致了我经常一段时间过后就会深深的厌恶上一种食物，类似于你把喜欢的歌当起床闹钟。\n在忍受了这么长时间的凑合之后，有一天我终于绷不住了，这他妈的也太让人崩溃啦。于是决定自己做做看，由于我是个懒狗，这一点我对自己有清醒的认知。我决定在家里啃老的这段时间赶紧学几道菜，一方面是改善一下天天被我爸应付的食谱，另一方面在家可以不用洗锅洗碗嘻嘻。\n总之在上述的机缘巧合之下，北山开始了他的中华小当家之旅。\nCuisine 1 蚝油生菜 作为除了小时候被迫学过做炒鸡蛋就再也没下过厨房的我，虽然立下了要给自己做好吃的目标，但起步还是很没骨气的选择了很简单的素菜。\n素菜毕竟是很容易熟的嘛，就算我出现什么重大失误了应该也不会吃出问题。更何况这个只需要焯水1分钟。剩下的就是调调下的料和炒个蒜罢了。\n焯水：指把肉或者菜放到煮开的水里面\n下面是食谱\n用料 蒜 2 瓣\n生抽 1 勺\n生菜 2 颗\n蚝油 1 勺\n糖 2 勺\n醋 1 勺\n洗好的生菜焯水，水开放生菜。焯水 1 分钟\n捞出控水备用\n准备蚝油 1 勺，生抽 1 勺，白糖 2 勺，盐 1 勺，醋 1 勺，2 倍多的水，搅匀备用\n锅中倒入油，蒜爆香。倒入刚刚准备的调料。烧开\n浇到刚刚焯好水的生菜上，完成。超级好吃\n小贴士 注意青菜 1 分钟就好了，不要焯水太久。另外焯水时放入点盐，油，保鲜\n下面是我的成果 这个蒜爆香的时候我炒的有点焦了，虽然一下子香味就出来了，但是过度油炸的东西果然还是有点不太健康。感觉问题出在油温太高了，我是在油已经开始冒烟的时候才下的蒜丁。 其他的就没什么了，毕竟基本上只要按照比例配好味道都差不多的。\n我的评价是难易度：很低，耗时：很少，味道：还可以\n推荐度7/10。适合想吃的健康点或者懒得做的时候。热量低的一批，吃了有饱腹感但是很快就消化完了，当夜宵加餐比较合适。\nCuisine 2 疙瘩汤 这次做的是疙瘩汤，一直觉得这个真的很好吃，黏糊糊的汤里面有蛋有菜也很好看，之前在东北上学的时候去恰烧烤，15块钱能点满满一盆疙瘩汤。不禁让我想起来小时候和妈妈一起去学校门口吃的西湖牛肉羹。\n不过做菜的过程就一言难尽了，拌疙瘩需要一滴水一滴水的去搅拌面粉，可以说吃的每一口都是自己亲手拌出来的，非常非常的耗费时间。这次需要准备的食材也比较多，把每种食材都需要切成小丁。总的来说是比第一个要难一些的。\n下面是食谱\n用料 面粉 100克\n鸡蛋 1个\n西红柿 1个\n菠菜 2-3颗\n葱花 少许\n食用油 少许 将水龙头调制水一滴一滴的滴下，不连成水流（在搅拌过程中务必注意不可碰到水龙头开关，不然容易造成严重翻车 [失望 R] 不要问我怎么知道的，都是伤心的泪水）\n将面粉碗移至水龙头下，用筷子来回搅拌，并不停的转动面粉的碗，不可在一个地方停留，容易形成特大的疙瘩，搅拌至无干粉即可\n针对面疙瘩，有人喜欢吃小的，有的喜欢吃大一点的，看个人喜好哈（我拌的这份属于偏大一点的）\n小火 锅内加油烧热 放入葱花炒香\n小伙转中火，放入西红柿丁，炒至软烂（爱吃西红柿味道的可在此步骤中加入一点番茄酱，我没加哈）\n在锅内加入适量的热水、烧至沸腾\n向沸腾的汤中，均匀的撒入面疙瘩，分散的撒，不要撒在一个地方，撒好以后用铲子推动几下；\n慢慢煮 3-5 分钟，夹出一个面疙瘩尝一尝里面是否还有面粉心状态，有的话再煮一会，随时尝着，不要怕麻烦。\n煮好面疙瘩以后，放入菠菜丁，推动几下可立即开始调味\n放入 1 勺盐，1 勺鸡粉（有人爱吃酱油可放入一点生抽，我不爱吃没放）\n均匀的分散着撒上鸡蛋液，立即关火（余温会把鸡蛋液烫熟的，有人爱吃芝麻香油，可在关火后淋入几滴香油，我不爱吃没放）\n倒入大碗中！一碗好吃的疙瘩汤就做成了！整体来看，只有搅[拌面]粉的时候会多花一点时间，其余步骤超级快，整体调味简单！适合厨房小白！\n做这个还是翻车严重的。爆香葱花的时候还是糊了一点点，这次也是等冒烟了才下的锅，不过迅速调了小火就好了。然后面疙瘩其实需要想办法让它不潮湿，外表裹上面粉，这个没什么办法只能用时间硬耗，中间有一部分我觉得我拌的蛮好的，方法是把水平均的滴在面粉上然后分开拌，这样又快拌出来的疙瘩又小，而且上粉很均匀。不过除此之外的都是灾难了，潮湿的面团放在碗里之后几乎变成了稀松的面饼。下锅时不得已一个一个揪开。加水的时候也加少了导致最后的成品过于粘稠了，变成了羹。其他的倒是没什么，面疙瘩基本上下锅之后等了两分钟就就熟了，估计是因为我下的太慢了，毕竟边下边揪小团确实浪费时间。味道倒是没得说，我觉得在现代调味料的帮助下，已经很难做出没法下口的饭菜了，对于任何一个接受过化学实验的人来说这都不应该是一件难事。\n下面是我的成果\n我的评价是难易度：较简单，耗时：较多，味道：不错\n推荐度7/10。适合在冬天花时间给自己心爱的人做一锅暖暖的又营养丰富的粥。如果不是特别喜欢是绝对不想花这么多时间做这个事情的。实在是太麻烦了，有这功夫可能点的外卖都到了吃完了。\n","date":"2022-12-15T21:20:42+08:00","permalink":"https://kitasuna.ml/post/%E5%8C%97%E5%B1%B1%E5%AE%B6%E7%9A%84%E9%A5%AD-%E5%85%B6%E4%B8%80/","title":"北山家的饭 其一"}]